<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 配置SchedulerFactoryBean类，调用时间触发 -->
	<bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" destroy-method="destroy">
		<property name="configLocation" value="classpath:quartz.properties" />  
	    <property name="dataSource">
	    	<ref bean="dataSource"/> 
	    </property>  
	    <!--可选，QuartzScheduler 启动时更新己存在的Job，这样就不用每次修改targetObject后删除qrtz_job_details表对应记录了 -->  
	    <property name="overwriteExistingJobs" value="true" />  
	    <!-- 设置自动启动 -->  
	    <property name="autoStartup" value="true" />
	    <!--QuartzScheduler 延时启动，应用启动完后 QuartzScheduler 再启动 -->  
        <property name="startupDelay" value="30"/>
	    <!--
	    	applicationContextSchedulerContextKey：   
		        是org.springframework.scheduling.quartz.SchedulerFactoryBean这个类中  
		        把spring上下 文以key/value的方式存放在了quartz的上下文中了，  
		        可以用applicationContextSchedulerContextKey所定义的key得到对应的spring上下文
		-->    
        <property name="applicationContextSchedulerContextKey" value="applicationContextKey"/> 
        <property name="jobFactory">
        	<ref bean="qcwifiJobFactory"/>
        </property>
	</bean>

</beans>
